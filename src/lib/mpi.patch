--- MUMPS_5.1.1/libseq/mpi.f	2017-03-20 15:34:36.000000000 +0100
+++ MUMPS_5.0.1/libseq/mpi.f	2016-08-25 15:24:46.338633358 +0200
@@ -143,7 +143,7 @@
       IMPLICIT NONE
       INTEGER COMM, IERRCODE, IERR
       WRITE(*,*) "** MPI_ABORT called"
-      STOP
+C      STOP
       END SUBROUTINE MPI_ABORT
 C***********************************************************************
       SUBROUTINE MPI_ALLTOALL( SENDBUF, SENDCNT, SENDTYPE,
@@ -559,30 +559,43 @@
       IMPLICIT NONE
       INCLUDE 'mpif.h'
       INTEGER COUNT, DATATYPE, IERR
-      INTEGER SENDBUF(*), RECVBUF(*)
+      INTEGER SENDBUF(*), RECVBUF(*), FACTOR
+      LOGICAL VL
+      REAL VR
+      DOUBLE PRECISION VD
+      COMPLEX VC
+      COMPLEX(kind=kind(0.0D0)) :: VCD
+      
       IF ( DATATYPE .EQ. MPI_INTEGER ) THEN
-         CALL MUMPS_COPY_INTEGER( SENDBUF, RECVBUF, COUNT )
+C        CALL MUMPS_COPY_INTEGER( SENDBUF, RECVBUF, COUNT )
+         FACTOR=1
       ELSEIF ( DATATYPE .EQ. MPI_LOGICAL ) THEN
-         CALL MUMPS_COPY_LOGICAL( SENDBUF, RECVBUF, COUNT )
+C        CALL MUMPS_COPY_LOGICAL( SENDBUF, RECVBUF, COUNT )
+         FACTOR=SIZEOF(VL)/SIZEOF(SENDBUF(1))
       ELSE IF ( DATATYPE .EQ. MPI_REAL ) THEN
-         CALL MUMPS_COPY_REAL( SENDBUF, RECVBUF, COUNT )
+C        CALL MUMPS_COPY_REAL( SENDBUF, RECVBUF, COUNT )
+         FACTOR=SIZEOF(VR)/SIZEOF(SENDBUF(1))
       ELSE IF ( DATATYPE .EQ. MPI_DOUBLE_PRECISION .OR.
-     &        DATATYPE .EQ. MPI_REAL8 ) THEN
-         CALL MUMPS_COPY_DOUBLE_PRECISION( SENDBUF, RECVBUF, COUNT )
+     &          DATATYPE .EQ. MPI_REAL8 ) THEN
+C        CALL MUMPS_COPY_DOUBLE_PRECISION( SENDBUF, RECVBUF, COUNT )
+         FACTOR=SIZEOF(VD)/SIZEOF(SENDBUF(1))
       ELSE IF ( DATATYPE .EQ. MPI_COMPLEX ) THEN
-         CALL MUMPS_COPY_COMPLEX( SENDBUF, RECVBUF, COUNT )
+C        CALL MUMPS_COPY_COMPLEX( SENDBUF, RECVBUF, COUNT )
+         FACTOR=SIZEOF(VC)/SIZEOF(SENDBUF(1))
       ELSE IF ( DATATYPE .EQ. MPI_DOUBLE_COMPLEX ) THEN
-         CALL MUMPS_COPY_DOUBLE_COMPLEX( SENDBUF, RECVBUF, COUNT )
+C        CALL MUMPS_COPY_DOUBLE_COMPLEX( SENDBUF, RECVBUF, COUNT )
+         FACTOR=SIZEOF(VCD)/SIZEOF(SENDBUF(1))
       ELSE IF ( DATATYPE .EQ. MPI_2DOUBLE_PRECISION) THEN
-         CALL MUMPS_COPY_2DOUBLE_PRECISION( SENDBUF, RECVBUF, COUNT )
+C        CALL MUMPS_COPY_2DOUBLE_PRECISION( SENDBUF, RECVBUF, COUNT )
+         FACTOR=2*SIZEOF(VD)/SIZEOF(SENDBUF(1))
       ELSE IF ( DATATYPE .EQ. MPI_2INTEGER) THEN
-         CALL MUMPS_COPY_2INTEGER( SENDBUF, RECVBUF, COUNT )
-      ELSE IF ( DATATYPE .EQ. MPI_INTEGER8) THEN
-        CALL MUMPS_COPY_INTEGER8( SENDBUF, RECVBUF, COUNT )
+C        CALL MUMPS_COPY_2INTEGER( SENDBUF, RECVBUF, COUNT )
+         FACTOR=2
       ELSE
         IERR=1
         RETURN
       END IF
+      CALL MUMPS_COPY_INTEGER( SENDBUF, RECVBUF, FACTOR*COUNT )
       IERR=0
       RETURN
       END SUBROUTINE MUMPS_COPY
