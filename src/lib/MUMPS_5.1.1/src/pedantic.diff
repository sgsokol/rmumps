diff --git a/src/lib/MUMPS_5.0.1/src/dana_aux.F b/src/lib/MUMPS_5.0.1/src/dana_aux.F
index 635c31d..68df55b 100644
--- a/src/lib/MUMPS_5.0.1/src/dana_aux.F
+++ b/src/lib/MUMPS_5.0.1/src/dana_aux.F
@@ -1885,10 +1885,10 @@ C
       FLAG => id%IS1(3*N+1:4*N)
       IF(MTRANSLOC.NE.1) THEN
          CALL DMUMPS_SUPPRESS_DUPPLI_VAL(N,NZREAL,IW(IP),IW(IRNW),S2,
-     &        PERM,FLAG(1))
+     &        PERM,FLAG(1:))
       ELSE
          CALL DMUMPS_SUPPRESS_DUPPLI_STR(N,NZREAL,IW(IP),IW(IRNW),
-     &        PERM,FLAG(1))
+     &        PERM,FLAG(1:))
       ENDIF
       IF(NZREAL .NE. I) DUPPLI = .TRUE.
       LS2 = NZTOT
diff --git a/src/lib/MUMPS_5.0.1/src/dana_driver.F b/src/lib/MUMPS_5.0.1/src/dana_driver.F
index fd7f3bd..aec8540 100644
--- a/src/lib/MUMPS_5.0.1/src/dana_driver.F
+++ b/src/lib/MUMPS_5.0.1/src/dana_driver.F
@@ -607,8 +607,8 @@ C     in the case of a distributed Schur complement (KEEP(60)=2 or 3).
 C     In that case, PROCNODE should be set accordingly and KEEP(38) is
 C     not modified.
             IF (id%KEEP(60) .EQ. 2 .OR. id%KEEP(60).EQ.3) THEN
-               CALL DMUMPS_SET_PROCNODE(id%KEEP(38), id%PROCNODE(1),
-     &              1+2*id%NSLAVES, id%IS1(FILS),id%N)
+               CALL DMUMPS_SET_PROCNODE(id%KEEP(38), id%PROCNODE(1:),
+     &              1+2*id%NSLAVES, id%IS1(FILS:),id%N)
             ENDIF
 C        *******************
 C        END SEQUENTIAL CODE
@@ -627,14 +627,14 @@ C     IKEEP(1:N,1) can be used as a work space since it is set
 C     to its final state by the SORT_PERM subroutine below.
             SSARBR => id%IS1(IKEEP:IKEEP+id%N-1)
 C     Map nodes and assign candidates for dynamic scheduling
-            CALL DMUMPS_DIST_AVOID_COPIES(id%N,id%NSLAVES,ICNTL(1),
-     &           INFOG(1),
-     &           id%IS1(NE),
-     &           id%IS1(NFSIZ),
-     &           id%IS1(FRERE),
-     &           id%IS1(FILS),
-     &           KEEP(1),KEEP8(1),id%PROCNODE(1),
-     &           SSARBR(1),id%NBSA,PEAK,IERR
+            CALL DMUMPS_DIST_AVOID_COPIES(id%N,id%NSLAVES,ICNTL(1:),
+     &           INFOG(1:),
+     &           id%IS1(NE:),
+     &           id%IS1(NFSIZ:),
+     &           id%IS1(FRERE:),
+     &           id%IS1(FILS:),
+     &           KEEP(1:),KEEP8(1:),id%PROCNODE(1:),
+     &           SSARBR(1:),id%NBSA,PEAK,IERR
      &           )
             NULLIFY(SSARBR)
             if(IERR.eq.-999) then 
@@ -1667,7 +1667,7 @@ C     it always available in a keep(71)
          END DO 
          CALL DMUMPS_BUILD_I_AM_CAND( id%NSLAVES, KEEP(79),
      &        NB_NIV2, id%MYID_NODES,
-     &        id%CANDIDATES(1,1), id%I_AM_CAND(1) )
+     &        id%CANDIDATES(1:,1:), id%I_AM_CAND(1:) )
       ENDIF
 #if ! defined(OLD_LOAD_MECHANISM)
       IF (associated(id%FUTURE_NIV2)) THEN
@@ -2180,7 +2180,7 @@ C     -------------------------
       SUBROUTINE DMUMPS_SET_PROCNODE(INODE, PROCNODE, VALUE, FILS, N)
       INTEGER, intent(in) :: INODE, N, VALUE
       INTEGER, intent(in) :: FILS(N)
-      INTEGER, intent(inout) :: PROCNODE(N)
+      INTEGER, intent(inout) :: PROCNODE(*)
 C     
       INTEGER IN
       IN=INODE
diff --git a/src/lib/MUMPS_5.0.1/src/dfac_distrib_ELT.F b/src/lib/MUMPS_5.0.1/src/dfac_distrib_ELT.F
index 66996f6..45b61e3 100644
--- a/src/lib/MUMPS_5.0.1/src/dfac_distrib_ELT.F
+++ b/src/lib/MUMPS_5.0.1/src/dfac_distrib_ELT.F
@@ -181,9 +181,9 @@ C
           IF ( DEST .ge. 0 .and. KEEP(46) .eq. 0 ) DEST = DEST + 1
           IF ( KEEP(52) .ne. 0 ) THEN
             CALL DMUMPS_SCALE_ELEMENT( N, SIZEI, SIZER,
-     &               id%ELTVAR( IELTPTR ), id%A_ELT( RELTPTR ),
+     &               id%ELTVAR( IELTPTR: ), id%A_ELT( RELTPTR: ),
      &               TEMP_ELT_R(1), MAXELT_REAL_SIZE,
-     &               id%ROWSCA(1), id%COLSCA(1), KEEP(50) )
+     &               id%ROWSCA(1:), id%COLSCA(1:), KEEP(50) )
           END IF
           IF ( DEST .eq. 0 .or. ( DEST .eq. -1 .and. KEEP(46) .ne. 0 ) )
      &      THEN
@@ -199,15 +199,15 @@ C
           IF ( DEST .NE. 0 .AND. DEST. NE. -3 ) THEN
             IF ( KEEP(52) .eq. 0 ) THEN
               CALL DMUMPS_ELT_FILL_BUF(
-     &           id%ELTVAR(IELTPTR),
-     &           id%A_ELT (RELTPTR),
+     &           id%ELTVAR(IELTPTR:),
+     &           id%A_ELT (RELTPTR:),
      &           SIZEI, SIZER,
      &
      &           DEST, NBUF, NBRECORDS,
      &           BUFI, BUFR, COMM )
             ELSE
               CALL DMUMPS_ELT_FILL_BUF(
-     &           id%ELTVAR(IELTPTR),
+     &           id%ELTVAR(IELTPTR:),
      &           TEMP_ELT_R( 1 ),
      &           SIZEI, SIZER,
      &
@@ -239,8 +239,8 @@ C
         SIZEI   = 1
         SIZER   = 1
         CALL DMUMPS_ELT_FILL_BUF(
-     &           id%ELTVAR(IELTPTR),
-     &           id%A_ELT (RELTPTR),
+     &           id%ELTVAR(IELTPTR:),
+     &           id%A_ELT (RELTPTR:),
      &           SIZEI, SIZER,
      &
      &           DEST, NBUF, NBRECORDS,
diff --git a/src/lib/MUMPS_5.0.1/src/dfac_process_band.F b/src/lib/MUMPS_5.0.1/src/dfac_process_band.F
index 717a121..4339503 100644
--- a/src/lib/MUMPS_5.0.1/src/dfac_process_band.F
+++ b/src/lib/MUMPS_5.0.1/src/dfac_process_band.F
@@ -228,7 +228,7 @@ C
 #if ! defined(NO_FDM_DESCBAND)
       IF (MUMPS_FDBD_IS_DESCBAND_STORED( INODE, IWHANDLER )) THEN 
         CALL MUMPS_FDBD_RETRIEVE_DESCBAND(IWHANDLER, DESCBAND_STRUC)
-        CALL DMUMPS_PROCESS_DESC_BANDE( MYID, DESCBAND_STRUC%BUFR(1),
+        CALL DMUMPS_PROCESS_DESC_BANDE( MYID, DESCBAND_STRUC%BUFR(1:),
      &       DESCBAND_STRUC%LBUFR,
      &       LBUFR_BYTES,
      &       IWPOS, IWPOSCB,
diff --git a/src/lib/MUMPS_5.0.1/src/dtype3_root.F b/src/lib/MUMPS_5.0.1/src/dtype3_root.F
index ca5c9c2..e065187 100644
--- a/src/lib/MUMPS_5.0.1/src/dtype3_root.F
+++ b/src/lib/MUMPS_5.0.1/src/dtype3_root.F
@@ -400,7 +400,7 @@ C
             NRLOCAL = PTRROW( IROW + 2 ) - PTRROW( IROW + 1 )
             NCLOCAL = PTRCOL( JCOL + 2 ) - PTRCOL( JCOL + 1 )
             CALL DMUMPS_ROOT_LOCAL_ASSEMBLY( N,
-     &        root%SCHUR_POINTER(1),
+     &        root%SCHUR_POINTER(1:),
      &        LOCAL_M, LOCAL_N,
      &        root%NPCOL, root%NPROW, root%MBLOCK, root%NBLOCK,
      &        NBCOL, NBROW,
@@ -412,9 +412,9 @@ C
      &        NRLOCAL,
      &        NCLOCAL,
      &        NSUPROW(IROW+1), NSUPCOL(JCOL+1),
-     &        root%RG2L_ROW(1), root%RG2L_COL(1), TRANSPOSE_ASM,
+     &        root%RG2L_ROW(1:), root%RG2L_COL(1:), TRANSPOSE_ASM,
      &        KEEP,
-     &        root%RHS_ROOT(1,1), root%RHS_NLOC )
+     &        root%RHS_ROOT(1:,1:), root%RHS_NLOC )
        ELSE
         IF ( PTRIST(STEP( IROOT )) .GE. 0 ) THEN
           IF ( PTRIST(STEP( IROOT )) .EQ. 0 ) THEN
@@ -440,9 +440,9 @@ C
      &        NRLOCAL,
      &        NCLOCAL,
      &        NSUPROW(IROW+1), NSUPCOL(JCOL+1),
-     &        root%RG2L_ROW(1), root%RG2L_COL(1), TRANSPOSE_ASM,
+     &        root%RG2L_ROW(1:), root%RG2L_COL(1:), TRANSPOSE_ASM,
      &        KEEP,
-     &        root%RHS_ROOT(1,1), root%RHS_NLOC )
+     &        root%RHS_ROOT(1:,1:), root%RHS_NLOC )
         END IF
        ENDIF
       END IF
